import esbuild from "esbuild";
import process from "process";
import builtins from "builtin-modules";
import fs from "fs";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
If you want to view the source, please visit the github repository
*/
`;

const prod = process.argv[2] === "production";

const context = await esbuild.context({
	banner: {
		js: banner,
	},
	entryPoints: ["src/main.ts"],
	bundle: true,
	external: [
		"obsidian",
		"electron",
		"@codemirror/autocomplete",
		"@codemirror/collab",
		"@codemirror/commands",
		"@codemirror/language",
		"@codemirror/lint",
		"@codemirror/search",
		"@codemirror/state",
		"@codemirror/view",
		"@lezer/common",
		"@lezer/highlight",
		"@lezer/lr",
		...builtins],
	format: "cjs",
	target: "es2018",
	logLevel: "info",
	sourcemap: prod ? false : "inline",
	treeShaking: true,
	outfile: "dst/main.js",
});

// Ensure dst directory exists
if (!fs.existsSync("dst")) {
    fs.mkdirSync("dst", { recursive: true });
}

if (prod) {
	await context.rebuild();
	// Copy styles.css to dst in production
	fs.copyFileSync("src/styles.css", "dst/styles.css");
	process.exit(0);
} else {
	await context.rebuild();
	await context.watch();
	// Copy styles.css to dst in development
	fs.copyFileSync("src/styles.css", "dst/styles.css");
}
